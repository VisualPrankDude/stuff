--- hit.c	2016-11-18 21:58:42.988000457 +0100
+++ my_hit.c	2016-11-18 22:33:52.108080834 +0100
@@ -1,5 +1,10 @@
 
 /*
+  example of constant instead of srandom()
+  useful as an example, no production,
+
+  Thanks wikileaks !
+
 https://wikileaks.org/hackingteam/emails/emailid/229541
 
 * Simple string obfuscation - Quequero 2013
@@ -16,6 +21,8 @@
 #include <stdlib.h>
 
 
+#undef USE_RANDOM
+#define USE_RANDOM
 
 // <search string> <replace string> <string tosearch>
 unsigned char *str_replace(unsigned char *search , unsigned
@@ -26,6 +33,7 @@
 
 
 
+
     search_size = strlen(search);
 
 
@@ -67,17 +75,27 @@
     unsigned char nl[] = "\n";
     unsigned char tb[] = "\t";
     unsigned char cr[] = "\r";
+    unsigned char cv[] = "\v";
     int i, j, len;
+    int useless_flag = 0;
 
 
 
     srandom(time(0));
+
+    /* seed = random(); */
+#ifdef USE_RANDOM
     seed = random();
+    useless_flag = 1;
+#endif
 
+    if(!useless_flag)
+     seed = "45326363645";
 
 
-    key = (unsigned char)(seed & 0x000000ff);
-    mod = (unsigned char)((seed & 0x0000ff00) >>
+
+    key = (unsigned char)(seed & 0x00ff00ff);
+    mod = (unsigned char)((seed & 0x0ff0ff00) >>
         8);
 
 
@@ -85,6 +103,7 @@
     rep = str_replace("\\n", nl, s);
     rep = str_replace("\\t", tb, rep);
     rep = str_replace("\\r", cr, rep);
+    rep = str_replace("\\v", cv, rep);
 
 
 
@@ -158,7 +177,7 @@
 
 
     if (argc < 2) {
-        printf("Usage: %s <string>\n", argv[0]);
+        printf("Usage: prog <string>\n");
         return 0;
     }
 
@@ -184,7 +203,9 @@
     obf_len += 3;
 
 
-
+#ifndef USE_RANDOM
+    printf("constant = 45326363645\n");
+#endif
     printf("unsigned char obf_string[] = \"");
 
 
@@ -214,7 +235,7 @@
 
 /*
 
-
+copyright by:
 
 -- 
 
